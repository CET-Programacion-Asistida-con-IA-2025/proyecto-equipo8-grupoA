// JavaScript - script.js
document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.nav-menu');
    
    hamburger.addEventListener('click', function() {
        navMenu.classList.toggle('active');
        hamburger.classList.toggle('active');
    });

    // Smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // Sample job data
    const jobsData = [
        {
            id: 1,
            title: "Desarrollador Frontend React",
            company: "TechCorp",
            location: "Buenos Aires, AR",
            type: "Tiempo completo",
            salary: "$80,000 - $120,000",
            tags: ["React", "JavaScript", "CSS"],
            remote: false,
            category: "full-time"
        },
        {
            id: 2,
            title: "Diseñador UX/UI",
            company: "CreativeStudio",
            location: "Remoto",
            type: "Medio tiempo",
            salary: "$50,000 - $70,000",
            tags: ["Figma", "Adobe XD", "Sketch"],
            remote: true,
            category: "part-time"
        },
        {
            id: 3,
            title: "Pasantía en Marketing Digital",
            company: "MarketPro",
            location: "Córdoba, AR",
            type: "Pasantía",
            salary: "$25,000 - $35,000",
            tags: ["Google Ads", "SEO", "Analytics"],
            remote: false,
            category: "internship"
        },
        {
            id: 4,
            title: "Desarrollador Backend Python",
            company: "DataTech",
            location: "Remoto",
            type: "Tiempo completo",
            salary: "$90,000 - $130,000",
            tags: ["Python", "Django", "PostgreSQL"],
            remote: true,
            category: "remote"
        },
        {
            id: 5,
            title: "Analista de Datos",
            company: "Analytics Co",
            location: "Rosario, AR",
            type: "Tiempo completo",
            salary: "$70,000 - $100,000",
            tags: ["SQL", "Python", "Tableau"],
            remote: false,
            category: "full-time"
        },
        {
            id: 6,
            title: "Pasantía en Desarrollo Web",
            company: "WebDev Solutions",
            location: "Buenos Aires, AR",
            type: "Pasantía",
            salary: "$20,000 - $30,000",
            tags: ["HTML", "CSS", "JavaScript"],
            remote: false,
            category: "internship"
        }
    ];

    let currentJobs = [];
    let displayedJobs = 0;
    const jobsPerLoad = 3;

    // Initialize jobs
    function initializeJobs() {
        currentJobs = [...jobsData];
        displayedJobs = 0;
        document.getElementById('jobsGrid').innerHTML = '';
        loadMoreJobs();
    }

    // Create job card HTML
    function createJobCard(job) {
        return `
            <div class="job-card" data-category="${job.category}">
                <div class="job-header">
                    <div class="job-company">${job.company.charAt(0)}</div>
                    <button class="job-save" onclick="toggleSaveJob(${job.id})">
                        <i class="far fa-heart"></i>
                    </button>
                </div>
                <h3 class="job-title">${job.title}</h3>
                <p class="job-company-name">${job.company}</p>
                <div class="job-details">
                    <div class="job-detail">
                        <i class="fas fa-map-marker-alt"></i>
                        <span>${job.location}</span>
                    </div>
                    <div class="job-detail">
                        <i class="fas fa-clock"></i>
                        <span>${job.type}</span>
                    </div>
                </div>
                <div class="job-tags">
                    ${job.tags.map(tag => `<span class="job-tag">${tag}</span>`).join('')}
                </div>
                <div class="job-salary">${job.salary}</div>
            </div>
        `;
    }

    // Load more jobs
    function loadMoreJobs() {
        const jobsGrid = document.getElementById('jobsGrid');
        const jobsToShow = currentJobs.slice(displayedJobs, displayedJobs + jobsPerLoad);
        
        jobsToShow.forEach(job => {
            jobsGrid.innerHTML += createJobCard(job);
        });
        
        displayedJobs += jobsToShow.length;
        
        // Hide load more button if all jobs are displayed
        if (displayedJobs >= currentJobs.length) {
            document.getElementById('loadMoreBtn').style.display = 'none';
        } else {
            document.getElementById('loadMoreBtn').style.display = 'block';
        }
    }

    // Load more button event
    document.getElementById('loadMoreBtn').addEventListener('click', loadMoreJobs);

    // Filter functionality
    const filterButtons = document.querySelectorAll('.filter-btn');
    filterButtons.forEach(button => {
        button.addEventListener('click', function() {
            // Remove active class from all buttons
            filterButtons.forEach(btn => btn.classList.remove('active'));
            // Add active class to clicked button
            this.classList.add('active');
            
            const filter = this.getAttribute('data-filter');
            filterJobs(filter);
        });
    });

    function filterJobs(filter) {
        if (filter === 'all') {
            currentJobs = [...jobsData];
        } else {
            currentJobs = jobsData.filter(job => job.category === filter);
        }
        
        displayedJobs = 0;
        document.getElementById('jobsGrid').innerHTML = '';
        loadMoreJobs();
    }

    // Search functionality
    const searchInput = document.getElementById('searchInput');
    const locationInput = document.getElementById('locationInput');
    const searchBtn = document.querySelector('.search-btn');

    function performSearch() {
        const searchTerm = searchInput.value.toLowerCase();
        const locationTerm = locationInput.value.toLowerCase();
        
        currentJobs = jobsData.filter(job => {
            const matchesSearch = searchTerm === '' || 
                job.title.toLowerCase().includes(searchTerm) ||
                job.company.toLowerCase().includes(searchTerm) ||
                job.tags.some(tag => tag.toLowerCase().includes(searchTerm));
            
            const matchesLocation = locationTerm === '' ||
                job.location.toLowerCase().includes(locationTerm);
            
            return matchesSearch && matchesLocation;
        });
        
        displayedJobs = 0;
        document.getElementById('jobsGrid').innerHTML = '';
        
        if (currentJobs.length === 0) {
            document.getElementById('jobsGrid').innerHTML = '<p style="text-align: center; grid-column: 1/-1; color: var(--text-light);">No se encontraron empleos que coincidan con tu búsqueda.</p>';
            document.getElementById('loadMoreBtn').style.display = 'none';
        } else {
            loadMoreJobs();
        }
    }

    searchBtn.addEventListener('click', performSearch);
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            performSearch();
        }
    });
    locationInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            performSearch();
        }
    });

    // Save/Unsave job functionality
    let savedJobs = JSON.parse(localStorage.getItem('savedJobs') || '[]');

    window.toggleSaveJob = function(jobId) {
        const index = savedJobs.indexOf(jobId);
        const heartIcon = document.querySelector(`[onclick="toggleSaveJob(${jobId})"] i`);
        
        if (index === -1) {
            savedJobs.push(jobId);
            heartIcon.classList.remove('far');
            heartIcon.classList.add('fas');
            heartIcon.style.color = 'var(--primary-color)';
        } else {
            savedJobs.splice(index, 1);
            heartIcon.classList.remove('fas');
            heartIcon.classList.add('far');
            heartIcon.style.color = '';
        }
        
        localStorage.setItem('savedJobs', JSON.stringify(savedJobs));
    };

    // Header scroll effect
    let lastScrollTop = 0;
    const header = document.querySelector('.header');
    
    window.addEventListener('scroll', function() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        if (scrollTop > lastScrollTop && scrollTop > 100) {
            header.style.transform = 'translateY(-100%)';
        } else {
            header.style.transform = 'translateY(0)';
        }
        
        lastScrollTop = scrollTop;
    });

    // Intersection Observer for animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // Observe elements for animation
    document.querySelectorAll('.job-card, .company-card, .stat-card').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(20px)';
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(el);
    });

    // Counter animation for stats
    function animateCounters() {
        const counters = document.querySelectorAll('.stat-number');
        counters.forEach(counter => {
            const target = parseInt(counter.textContent.replace(/\D/g, ''));
            const increment = target / 100;
            let current = 0;
            
            const timer = setInterval(() => {
                current += increment;
                if (current > target) {
                    current = target;
                    clearInterval(timer);
                }
                
                if (counter.textContent.includes('+')) {
                    counter.textContent = Math.floor(current).toLocaleString() + '+';
                } else if (counter.textContent.includes('%')) {
                    counter.textContent = Math.floor(current) + '%';
                } else {
                    counter.textContent = Math.floor(current).toLocaleString();
                }
            }, 20);
        });
    }

    // Trigger counter animation when stats section is visible
    const statsSection = document.querySelector('.stats-section');
    const statsObserver = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                animateCounters();
                statsObserver.unobserve(entry.target);
            }
        });
    }, { threshold: 0.5 });

    if (statsSection) {
        statsObserver.observe(statsSection);
    }

    // Form validation (for future login/register forms)
    function validateEmail(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
    }

    // Toast notifications (for future use)
    function showToast(message, type = 'success') {
        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        toast.textContent = message;
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? 'var(--gradient)' : '#e74c3c'};
            color: white;
            padding: 1rem 2rem;
            border-radius: var(--border-radius);
            z-index: 10000;
            transform: translateX(100%);
            transition: transform 0.3s ease;
        `;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.style.transform = 'translateX(0)';
        }, 100);
        
        setTimeout(() => {
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => {
                document.body.removeChild(toast);
            }, 300);
        }, 3000);
    }

    // Initialize saved jobs display
    function updateSavedJobsDisplay() {
        savedJobs.forEach(jobId => {
            const heartIcon = document.querySelector(`[onclick="toggleSaveJob(${jobId})"] i`);
            if (heartIcon) {
                heartIcon.classList.remove('far');
                heartIcon.classList.add('fas');
                heartIcon.style.color = 'var(--primary-color)';
            }
        });
    }

    // Initialize the page
    initializeJobs();
    
    // Update saved jobs display after jobs are loaded
    setTimeout(updateSavedJobsDisplay, 100);

    // Add loading states
    function showLoading(element) {
        element.innerHTML = '<div style="text-align: center; padding: 2rem;"><i class="fas fa-spinner fa-spin" style="font-size: 2rem; color: var(--primary-color);"></i></div>';
    }

    // Company card hover effects
    document.querySelectorAll('.company-card').forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px) scale(1.02)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
    });

    // Parallax effect for hero section
    window.addEventListener('scroll', function() {
        const scrolled = window.pageYOffset;
        const parallax = document.querySelector('.hero');
        const speed = scrolled * 0.5;
        
        if (parallax) {
            parallax.style.transform = `translateY(${speed}px)`;
        }
    });

    // Dynamic search suggestions (future enhancement)
    const searchSuggestions = [
        "Desarrollador Frontend",
        "Diseñador UX/UI", 
        "Marketing Digital",
        "Analista de Datos",
        "Product Manager",
        "Desarrollador Backend",
        "Pasantía Programación",
        "Remote Work"
    ];

    // Add subtle animations to buttons
    document.querySelectorAll('button').forEach(button => {
        button.addEventListener('mousedown', function() {
            this.style.transform = 'scale(0.98)';
        });
        
        button.addEventListener('mouseup', function() {
            this.style.transform = 'scale(1)';
        });
    });
});

// Additional utility functions
function formatSalary(min, max) {
    return `${min.toLocaleString()} - ${max.toLocaleString()}`;
}

function getTimeAgo(date) {
    const now = new Date();
    const diffTime = Math.abs(now - date);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    
    if (diffDays === 1) return 'Hace 1 día';
    if (diffDays < 7) return `Hace ${diffDays} días`;
    if (diffDays < 30) return `Hace ${Math.ceil(diffDays / 7)} semanas`;
    return `Hace ${Math.ceil(diffDays / 30)} meses`;
}

function shareJob(jobId) {
    if (navigator.share) {
        navigator.share({
            title: 'Oportunidad laboral en JovenLab',
            text: 'Mira esta oportunidad que encontré',
            url: `${window.location.origin}#job-${jobId}`
        });
    } else {
        // Fallback for browsers that don't support Web Share API
        const url = `${window.location.origin}#job-${jobId}`;
        navigator.clipboard.writeText(url).then(() => {
            showToast('Enlace copiado al portapapeles');
        });
    }
}

// Export functions for potential future modules
window.JovenLab = {
    formatSalary,
    getTimeAgo,
    shareJob,
    validateEmail: function(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
    },
    showToast: function(message, type = 'success') {
        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        toast.textContent = message;
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? 'var(--gradient)' : '#e74c3c'};
            color: white;
            padding: 1rem 2rem;
            border-radius: var(--border-radius);
            z-index: 10000;
            transform: translateX(100%);
            transition: transform 0.3s ease;
        `;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.style.transform = 'translateX(0)';
        }, 100);
        
        setTimeout(() => {
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => {
                document.body.removeChild(toast);
            }, 300);
        }, 3000);
    }
};
